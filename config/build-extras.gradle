buildscript {
    repositories {
        maven {
            url 'https://maven.fabric.io/public'
        }
        maven { url 'https://maven.google.com' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'io.fabric.tools:gradle:1.25.1'
    }
}

repositories {
    maven {
        url 'https://maven.google.com/'
    }
}
apply plugin: com.crashlytics.tools.gradle.CrashlyticsPlugin

allprojects {
    repositories {
        maven {
            url "https://maven.google.com"
        }
        jcenter()
      
        
        flatDir {
            dirs 'libs'
        }
    }

}

repositories {
  maven { url 'https://maven.fabric.io/public' }
}



android {

    packagingOptions {
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE.txt'
    }

    defaultConfig {
        applicationId "\"${app_id}\""
        minSdkVersion 21
        ext.buildNumber = System.getenv("TRAVIS_BUILD_NUMBER") ?: "local"
        versionName "1.0.$ext.buildNumber"
         manifestPlaceholders = [fabricKey: "${fabric_api_key}", fabricSecret: "${fabric_api_secret}"]
    }

    signingConfigs {
        release {

        }
    }

    buildTypes {
        release {
            buildConfigField "boolean", "USE_CRASHLYTICS", "true"
            ext.enableCrashlytics = true
        }
        debug{
            buildConfigField "boolean", "USE_CRASHLYTICS", "false"
            ext.enableCrashlytics = false
        }
    }

    flavorDimensions "default"

    productFlavors {
         dev {
             
            flavorDimensions "default"
        }

       
        production {
           
            flavorDimensions "default"
        }
    }

    applicationVariants.all { variant ->
        def flavor = variant.mergedFlavor
        def name = flavor.getVersionName()
        def flavorName = variant.properties.get('flavorName')
        def versionName = name

        if (!flavorName.equals("production")) {
            versionName += flavorName;
        }
        if (variant.buildType.isDebuggable()) {
            versionName += '-debug';
        }
        flavor.versionName = versionName;
        variant.outputs.each { output ->
            output.outputFileName = new File(output.outputFile.parent, "${app_name}-".toLowerCase() + versionName + ".apk")
        }
    }
}

dependencies {
     compile('com.crashlytics.sdk.android:crashlytics:2.9.3@aar') {
          transitive = true;
    }
}
